{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar node_fetch_1 = __importDefault(require(\"node-fetch\"));\n\nvar Ens_1 = __importDefault(require(\"./ens\"));\n\nvar Zns_1 = __importDefault(require(\"./Zns\"));\n\nvar DefaultUrl = 'https://unstoppabledomains.com/api/v1'; // Node env has special properties stored in process which are not inside the browser env.\n// Multiple checks is to avoid hitting the undefined while going deeper.\n\nvar isNode = function () {\n  if (typeof process === 'object') {\n    if (typeof process.versions === 'object') {\n      if (typeof process.versions.node !== 'undefined') {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nvar Namicorn =\n/** @class */\nfunction () {\n  function Namicorn(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.blockchain,\n        blockchain = _c === void 0 ? true : _c,\n        _d = _b.api,\n        api = _d === void 0 ? DefaultUrl : _d;\n\n    this.api = api.toString();\n    this.blockchain = !!blockchain;\n\n    if (blockchain) {\n      if (blockchain == true) {\n        blockchain = {};\n      }\n\n      if (blockchain.ens === undefined) {\n        blockchain.ens = true;\n      }\n\n      if (blockchain.zns === undefined) {\n        blockchain.zns = true;\n      }\n\n      if (blockchain.ens) {\n        this.ens = new Ens_1.default(blockchain.ens);\n      }\n\n      if (blockchain.zns) {\n        this.zns = new Zns_1.default(blockchain.zns);\n      }\n    }\n  }\n\n  Namicorn.prototype.resolve = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this.blockchain) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.resolveUsingBlockchain(domain)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 2:\n            if (!isNode()) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , node_fetch_1.default(this.api + \"/\" + domain)];\n\n          case 3:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            return [4\n            /*yield*/\n            , window.fetch(this.api + \"/\" + domain)];\n\n          case 5:\n            _a = _b.sent();\n            _b.label = 6;\n\n          case 6:\n            response = _a;\n            return [2\n            /*return*/\n            , response.json()];\n        }\n      });\n    });\n  };\n\n  Namicorn.prototype.address = function (domain, currencyTicker) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.resolve(domain)];\n\n          case 1:\n            data = _a.sent();\n            return [2\n            /*return*/\n            , data && data.addresses[currencyTicker.toUpperCase()] || null];\n        }\n      });\n    });\n  };\n\n  Namicorn.prototype.reverse = function (address, currencyTicker) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.ens.reverse(address, currencyTicker)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Namicorn.prototype.isSupportedDomain = function (domain) {\n    return this.zns && this.zns.isSupportedDomain(domain) || this.ens && this.ens.isSupportedDomain(domain);\n  };\n\n  Namicorn.prototype.isSupportedDomainInNetwork = function (domain) {\n    var methods = [this.ens, this.zns];\n    var method = methods.find(function (method) {\n      return method && method.isSupportedDomain(domain);\n    });\n    return method && method.isSupportedNetwork();\n  };\n\n  Namicorn.prototype.getNamingMethod = function (domain) {\n    var methods = [this.ens, this.zns];\n    var method = methods.find(function (method) {\n      return method && method.isSupportedDomain(domain);\n    });\n    return method || null;\n  };\n\n  Namicorn.prototype.resolveUsingBlockchain = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var method, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            method = this.getNamingMethod(domain);\n            if (!method) return [2\n            /*return*/\n            , null];\n            return [4\n            /*yield*/\n            , method.resolve(domain)];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result || Namicorn.UNCLAIMED_DOMAIN_RESPONSE];\n        }\n      });\n    });\n  };\n\n  Namicorn.UNCLAIMED_DOMAIN_RESPONSE = {\n    addresses: {},\n    meta: {\n      owner: null,\n      ttl: 0\n    }\n  };\n  return Namicorn;\n}();\n\nexports.Namicorn = Namicorn;\nexports.default = Namicorn;","map":null,"metadata":{},"sourceType":"script"}