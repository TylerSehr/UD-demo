{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar ens_1 = __importDefault(require(\"./ens/contract/ens\"));\n\nvar registrar_1 = __importDefault(require(\"./ens/contract/registrar\"));\n\nvar deed_1 = __importDefault(require(\"./ens/contract/deed\"));\n\nvar resolver_1 = __importDefault(require(\"./ens/contract/resolver\"));\n\nvar eth_ens_namehash_1 = require(\"eth-ens-namehash\");\n\nvar Web3 = require('web3');\n\nvar NullAddress = '0x0000000000000000000000000000000000000000';\nvar DefaultUrl = 'https://mainnet.infura.io';\nvar NetworkIdMap = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'kovan',\n  42: 'rinkeby',\n  5: 'goerli'\n};\nvar NetworkNameMap = lodash_1.default(NetworkIdMap).invert().mapValues(function (v, k) {\n  return parseInt(v);\n}).value();\nvar RegistryMap = {\n  mainnet: '0x314159265dd8dbb310642f98f50c066173c1259b',\n  ropsten: '0x112234455c3a32fd11230c42e7bccd4a84e02010'\n};\n\nvar Ens =\n/** @class */\nfunction () {\n  function Ens(source) {\n    if (source === void 0) {\n      source = true;\n    }\n\n    source = this.normalizeSource(source);\n    this.web3 = new Web3(source.url);\n    this.network = source.network;\n    this.url = source.url;\n\n    if (!this.network) {\n      throw new Error('Unspecified network in Namicorn ENS configuration');\n    }\n\n    if (!this.url) {\n      throw new Error('Unspecified url in Namicorn ENS configuration');\n    }\n\n    this.registryAddress = RegistryMap[this.network];\n\n    if (this.registryAddress) {\n      this.ensContract = new this.web3.eth.Contract(ens_1.default, this.registryAddress);\n      this.registrarContract = new this.web3.eth.Contract(registrar_1.default, //TODO: make an address dependent on network id\n      '0x6090A6e47849629b7245Dfa1Ca21D94cd15878Ef');\n    }\n  }\n\n  Ens.prototype.isSupportedDomain = function (domain) {\n    return domain.indexOf('.') > 0 && /^.{1,}\\.(eth|luxe|xyz|test)$/.test(domain);\n  };\n\n  Ens.prototype.isSupportedNetwork = function () {\n    return this.registryAddress != null;\n  };\n\n  Ens.prototype.reverse = function (address, currencyTicker) {\n    return __awaiter(this, void 0, void 0, function () {\n      var reverseAddress, nodeHash, resolverAddress, resolverContract;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (currencyTicker != 'ETH') {\n              throw new Error(\"Ens doesn't support any currency other than ETH\");\n            }\n\n            if (address.startsWith('0x')) {\n              address = address.substr(2);\n            }\n\n            reverseAddress = address + '.addr.reverse';\n            nodeHash = eth_ens_namehash_1.hash(reverseAddress);\n            return [4\n            /*yield*/\n            , this._getResolver(nodeHash)];\n\n          case 1:\n            resolverAddress = _a.sent();\n\n            if (resolverAddress == NullAddress) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            resolverContract = new this.web3.eth.Contract(resolver_1.default, resolverAddress);\n            return [4\n            /*yield*/\n            , this._resolverCallToName(resolverContract, nodeHash)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Ens.prototype.resolve = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nodeHash, _a, owner, ttl, resolver, address;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this.isSupportedDomain(domain) || !this.isSupportedNetwork()) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            nodeHash = eth_ens_namehash_1.hash(domain);\n            return [4\n            /*yield*/\n            , this._getResolutionInfo(nodeHash)];\n\n          case 1:\n            _a = _b.sent(), owner = _a[0], ttl = _a[1], resolver = _a[2];\n            if (owner == NullAddress) owner = null;\n            return [4\n            /*yield*/\n            , this._fetchAddress(resolver, nodeHash)];\n\n          case 2:\n            address = _b.sent();\n            return [2\n            /*return*/\n            , {\n              addresses: {\n                ETH: address\n              },\n              meta: {\n                owner: owner,\n                type: 'ens',\n                ttl: Number(ttl)\n              }\n            }];\n        }\n      });\n    });\n  };\n  /* Test functions bellow */\n\n\n  Ens.prototype._resolverCallToName = function (resolverContract, nodeHash) {\n    return resolverContract.methods.name(nodeHash).call();\n  };\n\n  Ens.prototype._getResolver = function (nodeHash) {\n    return this.ensContract.methods.resolver(nodeHash).call();\n  };\n\n  Ens.prototype._getResolutionInfo = function (nodeHash) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.ensContract.methods.owner(nodeHash).call(), this.ensContract.methods.ttl(nodeHash).call(), this.ensContract.methods.resolver(nodeHash).call()])];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  Ens.prototype._fetchAddress = function (resolver, nodeHash) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolverContract, address;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!resolver || resolver == NullAddress) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            resolverContract = new this.web3.eth.Contract(resolver_1.default, resolver);\n            return [4\n            /*yield*/\n            , resolverContract.methods.addr(nodeHash).call()];\n\n          case 1:\n            address = _a.sent();\n            return [2\n            /*return*/\n            , address];\n        }\n      });\n    });\n  };\n  /*===========================*/\n\n\n  Ens.prototype.fetchPreviousOwner = function (domain) {\n    return __awaiter(this, void 0, void 0, function () {\n      var labelHash, _a, mode, deedAddress, registrationDateSeconds, value, highestBid, deedContract, previousOwner;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            labelHash = this.web3.utils.sha3(domain.split('.')[0]);\n            return [4\n            /*yield*/\n            , this.registrarContract.methods.entries(labelHash).call()];\n\n          case 1:\n            _a = _b.sent(), mode = _a[0], deedAddress = _a[1], registrationDateSeconds = _a[2], value = _a[3], highestBid = _a[4];\n\n            if (deedAddress === NullAddress) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            deedContract = new this.web3.eth.Contract(deed_1.default, deedAddress);\n            previousOwner = deedContract.methods.previousOwner().call();\n            return [2\n            /*return*/\n            , previousOwner === NullAddress ? null : previousOwner];\n        }\n      });\n    });\n  };\n\n  Ens.prototype.normalizeSource = function (source) {\n    switch (typeof source) {\n      case 'boolean':\n        {\n          return {\n            url: DefaultUrl,\n            network: this.networkFromUrl(DefaultUrl)\n          };\n        }\n\n      case 'string':\n        {\n          return {\n            url: source,\n            network: this.networkFromUrl(source)\n          };\n        }\n\n      case 'object':\n        {\n          source = lodash_1.default.clone(source);\n\n          if (typeof source.network == 'number') {\n            source.network = NetworkIdMap[source.network];\n          }\n\n          if (source.network && !source.url) {\n            source.url = \"https://\" + source.network + \".infura.io\";\n          }\n\n          if (source.url && !source.network) {\n            source.network = this.networkFromUrl(source.url);\n          }\n\n          return source;\n        }\n    }\n  };\n\n  Ens.prototype.networkFromUrl = function (url) {\n    return lodash_1.default.find(NetworkIdMap, function (name) {\n      return url.indexOf(name) >= 0;\n    });\n  };\n\n  return Ens;\n}();\n\nexports.default = Ens;","map":null,"metadata":{},"sourceType":"script"}