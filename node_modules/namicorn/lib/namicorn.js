"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var node_fetch_1 = __importDefault(require("node-fetch"));
var Ens_1 = __importDefault(require("./ens"));
var Zns_1 = __importDefault(require("./zns"));
var DefaultUrl = 'https://unstoppabledomains.com/api/v1';
// Node env has special properties stored in process which are not inside the browser env.
// Multiple checks is to avoid hitting the undefined while going deeper.
var isNode = function () {
    if (typeof process === 'object') {
        if (typeof process.versions === 'object') {
            if (typeof process.versions.node !== 'undefined') {
                return true;
            }
        }
    }
    return false;
};
var Namicorn = /** @class */ (function () {
    function Namicorn(_a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.blockchain, blockchain = _c === void 0 ? true : _c, _d = _b.api, api = _d === void 0 ? DefaultUrl : _d;
        this.api = api.toString();
        this.blockchain = !!blockchain;
        if (blockchain) {
            if (blockchain == true) {
                blockchain = {};
            }
            if (blockchain.ens === undefined) {
                blockchain.ens = true;
            }
            if (blockchain.zns === undefined) {
                blockchain.zns = true;
            }
            if (blockchain.ens) {
                this.ens = new Ens_1.default(blockchain.ens);
            }
            if (blockchain.zns) {
                this.zns = new Zns_1.default(blockchain.zns);
            }
        }
    }
    Namicorn.prototype.resolve = function (domain) {
        return __awaiter(this, void 0, void 0, function () {
            var response, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.blockchain) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.resolveUsingBlockchain(domain)];
                    case 1: return [2 /*return*/, _b.sent()];
                    case 2:
                        if (!isNode()) return [3 /*break*/, 4];
                        return [4 /*yield*/, node_fetch_1.default(this.api + "/" + domain)];
                    case 3:
                        _a = _b.sent();
                        return [3 /*break*/, 6];
                    case 4: return [4 /*yield*/, window.fetch(this.api + "/" + domain)];
                    case 5:
                        _a = _b.sent();
                        _b.label = 6;
                    case 6:
                        response = _a;
                        return [2 /*return*/, response.json()];
                }
            });
        });
    };
    Namicorn.prototype.address = function (domain, currencyTicker) {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.resolve(domain)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, (data && data.addresses[currencyTicker.toUpperCase()]) || null];
                }
            });
        });
    };
    Namicorn.prototype.reverse = function (address, currencyTicker) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ens.reverse(address, currencyTicker)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Namicorn.prototype.isSupportedDomain = function (domain) {
        return ((this.zns && this.zns.isSupportedDomain(domain)) ||
            (this.ens && this.ens.isSupportedDomain(domain)));
    };
    Namicorn.prototype.isSupportedDomainInNetwork = function (domain) {
        var methods = [this.ens, this.zns];
        var method = methods.find(function (method) { return method && method.isSupportedDomain(domain); });
        return method && method.isSupportedNetwork();
    };
    Namicorn.prototype.getNamingMethod = function (domain) {
        var methods = [this.ens, this.zns];
        var method = methods.find(function (method) { return method && method.isSupportedDomain(domain); });
        return method || null;
    };
    Namicorn.prototype.resolveUsingBlockchain = function (domain) {
        return __awaiter(this, void 0, void 0, function () {
            var method, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        method = this.getNamingMethod(domain);
                        if (!method)
                            return [2 /*return*/, null];
                        return [4 /*yield*/, method.resolve(domain)];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, result || Namicorn.UNCLAIMED_DOMAIN_RESPONSE];
                }
            });
        });
    };
    Namicorn.UNCLAIMED_DOMAIN_RESPONSE = {
        addresses: {},
        meta: {
            owner: null,
            ttl: 0,
        },
    };
    return Namicorn;
}());
exports.Namicorn = Namicorn;
exports.default = Namicorn;
